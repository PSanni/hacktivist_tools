{
  "_args": [
    [
      "ddg",
      "/home/kod/opparis/socialmediabot"
    ]
  ],
  "_from": "ddg@*",
  "_id": "ddg@0.0.3",
  "_inCache": true,
  "_location": "/ddg",
  "_npmUser": {
    "email": "jawerty210@gmail.com",
    "name": "jawerty"
  },
  "_npmVersion": "1.2.15",
  "_phantomChildren": {
    "assert-plus": "0.1.5",
    "aws-sign": "0.3.0",
    "cookie-jar": "0.3.0",
    "ctype": "0.5.3",
    "json-stringify-safe": "5.0.1",
    "mime": "1.2.11",
    "node-uuid": "1.4.7"
  },
  "_requested": {
    "name": "ddg",
    "raw": "ddg",
    "rawSpec": "",
    "scope": null,
    "spec": "*",
    "type": "range"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/ddg/-/ddg-0.0.3.tgz",
  "_shasum": "84cfbb4ebd61c7aa793899f5cbe1886f0ea69698",
  "_shrinkwrap": null,
  "_spec": "ddg",
  "_where": "/home/kod/opparis/socialmediabot",
  "author": {
    "email": "jawerty210@gmail.com",
    "name": "Jared Wright"
  },
  "bugs": {
    "url": "http://github.com/jawerty/node-ddg/issues"
  },
  "dependencies": {
    "request": "2.25.0"
  },
  "description": "DuckDuck Go Instant Answers API wrapper for Node.js",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "84cfbb4ebd61c7aa793899f5cbe1886f0ea69698",
    "tarball": "http://registry.npmjs.org/ddg/-/ddg-0.0.3.tgz"
  },
  "engines": {
    "node": ">= 0.4.1"
  },
  "installable": true,
  "licenses": [
    {
      "type": "MIT",
      "url": "http://opensource.org/licenses/MIT"
    }
  ],
  "main": "./index.js",
  "maintainers": [
    {
      "name": "jawerty",
      "email": "jawerty210@gmail.com"
    }
  ],
  "name": "ddg",
  "optionalDependencies": {},
  "readme": "# node-ddg\nNode.js wrapper for DuckDuckGo's Instant Answers API. \n\n# Install\n```\n$ npm install ddg\n```\n\n# Usage\n\n\tddg = require('ddg');\n\n\tddg.query(\"duckduckgo\", function(err, data){\n\t\tconsole.log(data) // logs a dictionary with all return fields\n\t});\n\nSee the instant answers API docs for more information on the return fields <https://api.duckduckgo.com/api>\n\n### Custom options\n\tddg = require('ddg');\n\n\toptions = {\n\t\t\t\"useragent\": \"My duckduckgo app\",\n\t\t\t\"no_redirects\": \"1\",\n\t\t\t\"no_html\": \"0\",\n\t}\n\n\tddg.query('duckduckgo', options, function(err, data){\n\t\tconsole.log(data)\n\t});\n\nList of all options\n* useragent\n* format (json or xml)\n* pretty (default: 1)\n* no_html (default: 0)\n* skip_disambig (default: 0)\n* no_redirects (default: 1)\n\n### Getting query AbstractText\nHere I'm making a query for 'bioshock' and loging the AbstractText taken from Wikipedia.\n\t\n\tddg = require('ddg');\n\n\tddg.query('bioshock', options, function(err, data){\n\t\tconsole.log(data.AbstractText)\n\t});\n\nOutput:\n\n\tBioShock is a first-person shooter video game developed by Irrational Games (at the time, named 2K Boston), and published by 2K Games.\n\n### Generating information from results (url,text)\nWith Instant Answers API + node-ddg it becomes quite simple to get duckduckgo data.\n\n\tddg = require('ddg')\n\n\tddg.query('bioshock', function(err, data){\n\t\tresults = data.RelatedTopics; //related topics is a list of 'related answers'\n\t\tfor (i=0;i<results.length;i++) {\n\t\t\tconsole.log(''+results[i].FirstURL)\n\t\t\tconsole.log('-- '+results[i].Text)\n\t\t\tconsole.log('\\n')\n\t\t}\n\t});\n\nOutput:\n\n\thttp://duckduckgo.com/BioShock_(series)\n\t-- BioShock (series) - BioShock is a first-person shooter video game series \n\tdeveloped by Irrational Games—the first under the name 2K Boston/2K Australia—and \n\tdesigned by Ken Levine.\n\n\n\thttp://duckduckgo.com/c/Video_games_set_in_the_1960s\n\t-- Video games set in the 1960s\n\n\n\thttp://duckduckgo.com/c/Art_Deco_games\n\t-- Art Deco games\n\n\n\thttp://duckduckgo.com/c/Video_games_using_Havok\n\t-- Video games using Havok\n\n\n\thttp://duckduckgo.com/c/Alternate_history_video_games\n\t-- Alternate history video games\n\n\n\thttp://duckduckgo.com/c/Dystopian_fiction\n\t-- Dystopian fiction\n\n\n\thttp://duckduckgo.com/c/Video_games_developed_in_Australia\n\t-- Video games developed in Australia\n\n\n\thttp://duckduckgo.com/c/Games_for_Windows_certified_games\n\t-- Games for Windows certified games\n\n\n\thttp://duckduckgo.com/c/Unreal_Engine_games\n\t-- Unreal Engine games\n\n\n\thttp://duckduckgo.com/c/Video_games_developed_in_Canada\n\t-- Video games developed in Canada\n\nNow you can get and manipulate data from the API in a clean and asynchronous fashion.\n\n### Access fields directly\nIf you want to get one specific field and nothing else, you can use **the field you want as a method** and run it as seen below.\n\t\n\tddg = require('ddg');\n\n\tddg.Definition('lion', function(err, data){\n\t\tconsole.log(data)\n\t});\n\nOutput:\n\n\t lion definition: a large heavily built social cat ('''Panthera leo''') of open or\n\t rocky areas chiefly of sub-Saharan Africa though once widely distributed \n\t throughout Africa and southern Asia that has a tawny body with a tufted tail and\n\t  a shaggy blackish or dark brown mane in the male.\n\nHere's a list of all Instant Answer API root fields (supported)\n* Abstract\n* AbstractText \n* AbstractSource\n* AbstractURL\n* Image\n* Heading\n* Answer\n* AnswerType\n* Definition (**used in example above**)\n* DefinitionSource\n* DefinitionURL\n* RelatedTopics \n* Results\n* Type\n* Redirect\n\n# Contact\nGithub - [jawerty](http://github.com/jawerty)\n\nTwitter - [@jawerty](http://twitter.com/jawerty)\n\nEmail - jawerty210@gmail.com\n\nWebsite - <http://jawerty.github.io>\n\n# LICENSE\nMIT LICENSE--see file /LICENSE \n\n\n\n\n**This project has no offiliation with the company DuckDuckGo.**\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/jawerty/node-ddg.git"
  },
  "scripts": {
    "test": "node ./test/test.js"
  },
  "tags": [
    "Duck",
    "DuckDuckGo",
    "DuckDuckHack",
    "Go",
    "api",
    "ddg",
    "node",
    "wrapper"
  ],
  "version": "0.0.3"
}
